{"remainingRequest":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/thread-loader/dist/cjs.js!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/babel-loader/lib/index.js!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/src/scenes/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/src/scenes/Settings.vue","mtime":1564895441555},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport store from \"../store\";\nexport default {\n  name: 'lfEventsSettings',\n  store: store,\n  methods: _objectSpread({}, mapActions(['saveSettings']), {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                this.saveSettings({\n                  api: this.api,\n                  nonce: eventsSettings.nonce\n                });\n                this.loading = false;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }),\n  data: function data() {\n    return {\n      api: eventsSettings.google_api,\n      loading: false\n    };\n  }\n};",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,KAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA,KAFA;AAGA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,cADA,CAAA,CADA;AAIA,IAAA,QAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,qBAAA,OAAA,GAAA,IAAA;AACA,qBAAA,YAAA,CAAA;AACA,kBAAA,GAAA,EAAA,KAAA,GADA;AAEA,kBAAA,KAAA,EAAA,cAAA,CAAA;AAFA,iBAAA;AAIA,qBAAA,OAAA,GAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,IAHA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,cAAA,CAAA,UADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA;AArBA,CAAA","sourcesContent":["<template>\n  <div class=\"events-settings\">\n    <h1>Events</h1>\n    <form v-on:submit.prevent=\"onSubmit\">\n      <el-row>\n         <el-col :span=\"8\">\n           <label class=\"el-form-item__label\">Google Maps API key:</label>\n         </el-col>\n         <el-col :span=\"16\">\n           <el-input\n             name=\"api\"\n             placeholder=\"API key\"\n             v-model=\"api\"\n             clearable>\n           </el-input>\n           <el-row>\n             <b>You are using The Events built-in Google Maps API key.</b>\n           </el-row>\n           <small>If you do not add your own API key, the built-in API key will always populate this field and some map-related functionality will be limited.</small>\n           <el-row>\n             <small><el-link href=\"https://developers.google.com/maps/documentation/javascript/get-api-key\" target=\"_blank\">Click here &nbsp;</el-link> to create your own free Google Maps API key.</small>\n           </el-row>\n         </el-col>\n       </el-row>\n       <el-button type=\"primary\" native-type=\"submit\" :loading=\"loading\">Save changes</el-button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport store from '../store'\n\nexport default {\n  name: 'lfEventsSettings',\n  store,\n  methods: {\n    ...mapActions([\n      'saveSettings',\n    ]),\n    async onSubmit() {\n      this.loading = true\n      this.saveSettings({\n        api: this.api,\n        nonce: eventsSettings.nonce,\n      })\n      this.loading = false\n    }\n  },\n  data() {\n    return {\n      api: eventsSettings.google_api,\n      loading: false\n    }\n  }\n}\n</script>\n\n<style>\n.event_page_events-settings div#wpwrap{\n  background: #fff;\n}\n\n.event_page_events-settings div#wpwrap #wpcontent{\n  padding-right: 20px;\n}\n</style>\n\n<style scoped>\n.events-settings{\n  margin-top: 50px;\n}\nh1{\n  margin-bottom: 50px;\n}\n.el-button{\n  margin-top: 20px;\n}\n.el-col-16{\n  padding-right: 10px;\n}\nsmall .el-link{\n  font-size: 10px;\n}\n\nsmall{\n  display: flex;\n}\n\n.el-input{\n  margin-bottom: 10px;\n}\n</style>\n"],"sourceRoot":"src/scenes"}]}