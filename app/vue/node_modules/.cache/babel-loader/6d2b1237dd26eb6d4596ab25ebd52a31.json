{"remainingRequest":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/thread-loader/dist/cjs.js!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/babel-loader/lib/index.js!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/src/scenes/Options.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/src/scenes/Options.vue","mtime":1564895433912},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/gurieveugen/Sites/events/wp-content/plugins/events/app/vue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport store from \"../store\";\nexport default {\n  name: 'app',\n  store: store,\n  props: ['location', 'from', 'to'],\n  computed: {\n    fromValue: function fromValue() {\n      return this.getDateFromArray(this.ft, 0);\n    },\n    toValue: function toValue() {\n      return this.getDateFromArray(this.ft, 1);\n    }\n  },\n  data: function data() {\n    return {\n      loc: '',\n      ft: '',\n      googleAutocomplete: null,\n      pickerOptions: {\n        shortcuts: [{\n          text: 'Next day',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            end.setTime(start.getTime() + 3600 * 1000 * 24 * 1);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Next week',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            end.setTime(start.getTime() + 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Next month',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            end.setTime(start.getTime() + 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var inputEl, input;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loc = this.location;\n              this.ft = [this.from, this.to];\n              _context.next = 4;\n              return this.loadGoogle();\n\n            case 4:\n              inputEl = this.$refs.location.$el.getElementsByTagName('input')[0];\n              input = new google.maps.places.Autocomplete(inputEl);\n              google.maps.event.addDomListener(inputEl, 'keydown', function (e) {\n                if (e.keyCode == 13) {\n                  e.preventDefault();\n                }\n              });\n              this.googleAutocomplete = input;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread({}, mapActions(['loadGoogle']), {\n    getDateFromArray: function getDateFromArray(arr, index) {\n      if (arr instanceof Array) {\n        if ('object' === _typeof(arr[index])) {\n          return arr[index].toISOString().slice(0, 19).replace('T', ' ');\n        }\n\n        return arr[index];\n      }\n\n      return '';\n    }\n  })\n};",{"version":3,"sources":["Options.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"event-options\">\n    <el-row>\n      <el-col :span=\"8\">\n        <label class=\"el-form-item__label\">Time & date:</label>\n      </el-col>\n      <el-col :span=\"16\">\n        <el-date-picker\n          v-model=\"ft\"\n          type=\"datetimerange\"\n          :picker-options=\"pickerOptions\"\n          start-placeholder=\"Start date\"\n          end-placeholder=\"End date\"\n          align=\"right\">\n        </el-date-picker>\n        <input type=\"hidden\" name=\"from\" ref=\"from\" :value=\"fromValue\">\n        <input type=\"hidden\" name=\"to\" ref=\"to\" :value=\"toValue\">\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"8\">\n        <label class=\"el-form-item__label\">Location:</label>\n      </el-col>\n      <el-col :span=\"16\">\n        <el-input\n          name=\"location\"\n          placeholder=\"Enter a location\"\n          v-model=\"loc\"\n          ref=\"location\"\n          clearable>\n        </el-input>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport store from '../store'\n\nexport default {\n  name: 'app',\n  store,\n  props: ['location', 'from', 'to'],\n  computed: {\n    fromValue() {\n      return this.getDateFromArray(this.ft, 0)\n    },\n    toValue() {\n      return this.getDateFromArray(this.ft, 1)\n    }\n  },\n  data() {\n    return {\n      loc: '',\n      ft: '',\n      googleAutocomplete: null,\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: 'Next day',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              end.setTime(start.getTime() + 3600 * 1000 * 24 * 1)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: 'Next week',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              end.setTime(start.getTime() + 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: 'Next month',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              end.setTime(start.getTime() + 3600 * 1000 * 24 * 30)\n              picker.$emit('pick', [start, end])\n            }\n          },\n        ]\n      },\n    }\n  },\n  async mounted() {\n    this.loc = this.location\n    this.ft = [this.from, this.to]\n    await this.loadGoogle()\n    let inputEl = this.$refs.location.$el.getElementsByTagName('input')[0]\n    let input = new google.maps.places.Autocomplete(inputEl)\n\n    google.maps.event.addDomListener(\n      inputEl,\n      'keydown',\n      function(e) {\n        if (e.keyCode == 13) {\n          e.preventDefault()\n        }\n      }\n    )\n\n    this.googleAutocomplete = input\n  },\n  methods: {\n    ...mapActions([\n      'loadGoogle',\n    ]),\n    getDateFromArray(arr, index) {\n      if (arr instanceof Array) {\n        if ('object' === typeof(arr[index])) {\n          return arr[index].toISOString().slice(0, 19).replace('T', ' ')\n        }\n        return arr[index]\n      }\n      return ''\n    }\n  }\n}\n</script>\n\n<style>\n  .el-input .el-input__inner{\n    box-shadow: none;\n  }\n  div.el-date-editor .el-range-input,\n  div.el-date-editor .el-range-separator{\n    text-align: left;\n  }\n</style>\n\n<style scoped>\n  .el-row{\n    margin-top: 10px;\n  }\n  .el-date-editor.el-input__inner{\n    width: 100%;\n  }\n\n  label{\n    font-weight: bold;\n  }\n  .selected-address{\n    margin-top: 10px;\n    display: block;\n  }\n</style>\n"],"sourceRoot":"src/scenes"}]}